

================================================================
== Vitis HLS Report for 'matmul_1_Pipeline_loop_output_C1_loop_output_C2'
================================================================
* Date:           Sun Jun 30 22:43:06 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        MatMul
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.621 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       11|       11|  0.110 us|  0.110 us|   11|   11|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                 |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |            Loop Name            |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_output_C1_loop_output_C2  |        9|        9|         2|          1|          1|     9|       yes|
        +---------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.62>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%col = alloca i32 1" [MatMul/src/matmul.cpp:14]   --->   Operation 5 'alloca' 'col' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%row = alloca i32 1" [MatMul/src/matmul.cpp:14]   --->   Operation 6 'alloca' 'row' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten55 = alloca i32 1"   --->   Operation 7 'alloca' 'indvar_flatten55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i32 %out_C_V_data_V, i4 %out_C_V_keep_V, i4 %out_C_V_strb_V, i1 0, i1 %out_C_V_last_V, i1 0, i1 0, void @empty_2"   --->   Operation 8 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %out_C_V_last_V, i4 %out_C_V_strb_V, i4 %out_C_V_keep_V, i32 %out_C_V_data_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_phi7_reload_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %p_phi7_reload"   --->   Operation 10 'read' 'p_phi7_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_phi_reload_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %p_phi_reload"   --->   Operation 11 'read' 'p_phi_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.46ns)   --->   "%store_ln0 = store i4 0, i4 %indvar_flatten55"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 13 [1/1] (0.46ns)   --->   "%store_ln14 = store i2 0, i2 %row" [MatMul/src/matmul.cpp:14]   --->   Operation 13 'store' 'store_ln14' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 14 [1/1] (0.46ns)   --->   "%store_ln14 = store i2 0, i2 %col" [MatMul/src/matmul.cpp:14]   --->   Operation 14 'store' 'store_ln14' <Predicate = true> <Delay = 0.46>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body86"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten55_load = load i4 %indvar_flatten55" [MatMul/src/matmul.cpp:61]   --->   Operation 16 'load' 'indvar_flatten55_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.80ns)   --->   "%icmp_ln61 = icmp_eq  i4 %indvar_flatten55_load, i4 9" [MatMul/src/matmul.cpp:61]   --->   Operation 17 'icmp' 'icmp_ln61' <Predicate = true> <Delay = 0.80> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.80ns)   --->   "%add_ln61_1 = add i4 %indvar_flatten55_load, i4 1" [MatMul/src/matmul.cpp:61]   --->   Operation 18 'add' 'add_ln61_1' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln61 = br i1 %icmp_ln61, void %for.inc109, void %for.end111.exitStub" [MatMul/src/matmul.cpp:61]   --->   Operation 19 'br' 'br_ln61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%col_load = load i2 %col" [MatMul/src/matmul.cpp:62]   --->   Operation 20 'load' 'col_load' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%row_load = load i2 %row" [MatMul/src/matmul.cpp:61]   --->   Operation 21 'load' 'row_load' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.62ns)   --->   "%add_ln61 = add i2 %row_load, i2 1" [MatMul/src/matmul.cpp:61]   --->   Operation 22 'add' 'add_ln61' <Predicate = (!icmp_ln61)> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.62ns)   --->   "%icmp_ln62 = icmp_eq  i2 %col_load, i2 3" [MatMul/src/matmul.cpp:62]   --->   Operation 23 'icmp' 'icmp_ln62' <Predicate = (!icmp_ln61)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.34ns)   --->   "%select_ln14 = select i1 %icmp_ln62, i2 0, i2 %col_load" [MatMul/src/matmul.cpp:14]   --->   Operation 24 'select' 'select_ln14' <Predicate = (!icmp_ln61)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.34ns)   --->   "%select_ln61 = select i1 %icmp_ln62, i2 %add_ln61, i2 %row_load" [MatMul/src/matmul.cpp:61]   --->   Operation 25 'select' 'select_ln61' <Predicate = (!icmp_ln61)> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln64 = zext i2 %select_ln61" [MatMul/src/matmul.cpp:64]   --->   Operation 26 'zext' 'zext_ln64' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_7 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i2.i2, i2 %select_ln61, i2 0" [MatMul/src/matmul.cpp:64]   --->   Operation 27 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln64 = sub i4 %tmp_7, i4 %zext_ln64" [MatMul/src/matmul.cpp:64]   --->   Operation 28 'sub' 'sub_ln64' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.23> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 29 [1/1] (0.62ns)   --->   "%cmp101 = icmp_eq  i2 %select_ln61, i2 2" [MatMul/src/matmul.cpp:61]   --->   Operation 29 'icmp' 'cmp101' <Predicate = (!icmp_ln61)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln64_1 = zext i2 %select_ln14" [MatMul/src/matmul.cpp:64]   --->   Operation 30 'zext' 'zext_ln64_1' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.46ns) (root node of TernaryAdder)   --->   "%add_ln64 = add i4 %sub_ln64, i4 %zext_ln64_1" [MatMul/src/matmul.cpp:64]   --->   Operation 31 'add' 'add_ln64' <Predicate = (!icmp_ln61)> <Delay = 0.46> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.23> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln64_2 = zext i4 %add_ln64" [MatMul/src/matmul.cpp:64]   --->   Operation 32 'zext' 'zext_ln64_2' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%output_C_addr = getelementptr i32 %output_C, i64 0, i64 %zext_ln64_2" [MatMul/src/matmul.cpp:64]   --->   Operation 33 'getelementptr' 'output_C_addr' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_1 : Operation 34 [2/2] (0.73ns)   --->   "%converter = load i4 %output_C_addr" [MatMul/src/matmul.cpp:64]   --->   Operation 34 'load' 'converter' <Predicate = (!icmp_ln61)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_1 : Operation 35 [1/1] (0.62ns)   --->   "%icmp_ln69 = icmp_eq  i2 %select_ln14, i2 2" [MatMul/src/matmul.cpp:69]   --->   Operation 35 'icmp' 'icmp_ln69' <Predicate = (!icmp_ln61)> <Delay = 0.62> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.14ns)   --->   "%local_stream_last = and i1 %cmp101, i1 %icmp_ln69" [MatMul/src/matmul.cpp:69]   --->   Operation 36 'and' 'local_stream_last' <Predicate = (!icmp_ln61)> <Delay = 0.14> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.14> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.62ns)   --->   "%add_ln62 = add i2 %select_ln14, i2 1" [MatMul/src/matmul.cpp:62]   --->   Operation 37 'add' 'add_ln62' <Predicate = (!icmp_ln61)> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.46ns)   --->   "%store_ln61 = store i4 %add_ln61_1, i4 %indvar_flatten55" [MatMul/src/matmul.cpp:61]   --->   Operation 38 'store' 'store_ln61' <Predicate = (!icmp_ln61)> <Delay = 0.46>
ST_1 : Operation 39 [1/1] (0.46ns)   --->   "%store_ln14 = store i2 %select_ln61, i2 %row" [MatMul/src/matmul.cpp:14]   --->   Operation 39 'store' 'store_ln14' <Predicate = (!icmp_ln61)> <Delay = 0.46>
ST_1 : Operation 40 [1/1] (0.46ns)   --->   "%store_ln14 = store i2 %add_ln62, i2 %col" [MatMul/src/matmul.cpp:14]   --->   Operation 40 'store' 'store_ln14' <Predicate = (!icmp_ln61)> <Delay = 0.46>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 48 'ret' 'ret_ln0' <Predicate = (icmp_ln61)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.73>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @loop_output_C1_loop_output_C2_str"   --->   Operation 41 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9"   --->   Operation 42 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%specpipeline_ln14 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_1" [MatMul/src/matmul.cpp:14]   --->   Operation 43 'specpipeline' 'specpipeline_ln14' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/2] (0.73ns)   --->   "%converter = load i4 %output_C_addr" [MatMul/src/matmul.cpp:64]   --->   Operation 44 'load' 'converter' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%local_stream_data = bitcast i32 %converter" [MatMul/src/matmul.cpp:66]   --->   Operation 45 'bitcast' 'local_stream_data' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.00ns)   --->   "%write_ln74 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i1P0A, i32 %out_C_V_data_V, i4 %out_C_V_keep_V, i4 %out_C_V_strb_V, i1 %out_C_V_last_V, i32 %local_stream_data, i4 %p_phi_reload_read, i4 %p_phi7_reload_read, i1 %local_stream_last" [MatMul/src/matmul.cpp:74]   --->   Operation 46 'write' 'write_ln74' <Predicate = true> <Delay = 1.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%br_ln62 = br void %for.body86" [MatMul/src/matmul.cpp:62]   --->   Operation 47 'br' 'br_ln62' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.621ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln14', MatMul/src/matmul.cpp:14) of constant 0 on local variable 'row', MatMul/src/matmul.cpp:14 [16]  (0.460 ns)
	'load' operation 2 bit ('row_load', MatMul/src/matmul.cpp:61) on local variable 'row', MatMul/src/matmul.cpp:14 [26]  (0.000 ns)
	'add' operation 2 bit ('add_ln61', MatMul/src/matmul.cpp:61) [27]  (0.621 ns)
	'select' operation 2 bit ('select_ln61', MatMul/src/matmul.cpp:61) [32]  (0.345 ns)
	'sub' operation 4 bit ('sub_ln64', MatMul/src/matmul.cpp:64) [35]  (0.000 ns)
	'add' operation 4 bit ('add_ln64', MatMul/src/matmul.cpp:64) [38]  (0.465 ns)
	'getelementptr' operation 4 bit ('output_C_addr', MatMul/src/matmul.cpp:64) [40]  (0.000 ns)
	'load' operation 32 bit ('converter', MatMul/src/matmul.cpp:64) on array 'output_C' [42]  (0.730 ns)

 <State 2>: 1.730ns
The critical path consists of the following:
	'load' operation 32 bit ('converter', MatMul/src/matmul.cpp:64) on array 'output_C' [42]  (0.730 ns)
	axis write operation ('write_ln74', MatMul/src/matmul.cpp:74) on port 'out_C_V_data_V' (MatMul/src/matmul.cpp:74) [46]  (1.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
